'use strict';

var deepmerge = require('deepmerge');

function _interopDefault (e) { return e && e.__esModule ? e : { default: e }; }

var deepmerge__default = /*#__PURE__*/_interopDefault(deepmerge);

function excludeParentKeys(dictionary, transformOpts) {
    if (!transformOpts?.excludeParentKeys) {
        return dictionary;
    }
    const copy = {};
    Object.values(dictionary).forEach(set => {
        Object.entries(set).forEach(([key, tokenGroup]) => {
            if (copy[key]) {
                copy[key] = deepmerge__default.default(copy[key], tokenGroup);
            }
            else {
                copy[key] = tokenGroup;
            }
        });
    });
    return copy;
}

exports.excludeParentKeys = excludeParentKeys;
